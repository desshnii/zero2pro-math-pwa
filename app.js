if('serviceWorker' in navigator){ navigator.serviceWorker.register('./service-worker.js'); }
const app=document.getElementById('app');
const STATE={name:'Mikael Deshni',startDate:localStorage.getItem('startDate')||'2025-08-08',days:[],completed:JSON.parse(localStorage.getItem('completed')||'[]')};
function saveProgress(){localStorage.setItem('completed',JSON.stringify(STATE.completed));localStorage.setItem('startDate',STATE.startDate);render();}
function daysBetween(a,b){return Math.floor((b-a)/(1000*60*60*24));}
function paceStatus(){const start=new Date(STATE.startDate+'T00:00:00');const expectedIndex=Math.min(daysBetween(start,new Date()),STATE.days.length-1);const done=STATE.completed.length;const expected=expectedIndex+1;if(done>=expected+1)return'FÃ–RE';if(done+1<=expected-1)return'EFTER';return'I FAS';}
function coverScreen(){return `<div class="center screen"><div class="cover">FrÃ¥n noll till proffs<br>Matte 2a</div><p class="muted" style="margin:12px 0 4px">Personlig kurs fÃ¶r ${STATE.name}</p><div style="margin:10px 0"><label class="muted">Startdatum</label><br/><input type="date" value="${STATE.startDate}" onchange="STATE.startDate=this.value; saveProgress();"></div><button class="btn" onclick="goHome()">Starta kursen</button></div>`;}
function topbar(){const done=STATE.completed.length;const total=STATE.days.length;const pct=Math.round(done/total*100);const status=paceStatus();return `<div class="topbar"><div class="screen"><h3>FrÃ¥n noll till proffs â€“ Matte 2a</h3><div class="progress"><div style="width:${pct}%"></div></div><div style="margin-top:6px"><span class="pill">Klara dagar: ${done}/${total}</span><span class="pill">Status: ${status}</span></div></div></div>`;}
function homeScreen(){let items=STATE.days.map(d=>`<div class="day"><h3>${d.title}</h3><p class="muted">${d.goal}</p><details><summary>Regel & exempel</summary><p>${d.theory}</p></details><h4>Uppgifter</h4>${d.exercises.map(ex=>`<div class="card" style="margin:6px 0"><div>${ex.prompt}</div><button class="btn secondary" onclick="toggleAnswer(${d.index},'${ex.prompt.replace(/'/g,"\'")}')">Visa facit</button><div id="ans-${d.index}-${btoa(ex.prompt).slice(0,8)}" class="hidden"><div style="margin-top:8px"><b>Svar:</b> ${ex.answer}</div><div class="muted">${ex.explanation}</div></div></div>`).join('')}${d.quiz&&d.quiz.length?quizBlock(d):''}<button class="btn" onclick="markDone(${d.index})">${STATE.completed.includes(d.index)?'Avmarkera':'Markera klar'}</button></div>`).join(''); return `<div>${topbar()}<div class="screen grid" style="margin-top:12px">${items}</div></div>`;}
function toggleAnswer(dayIndex,prompt){const id='ans-'+dayIndex+'-'+btoa(prompt).slice(0,8);const el=document.getElementById(id);if(!el)return;el.classList.toggle('hidden');}
function markDone(i){const idx=STATE.completed.indexOf(i);if(idx>-1)STATE.completed.splice(idx,1);else STATE.completed.push(i);saveProgress();}
function quizBlock(day){return `<h4>Quiz</h4><div id="quiz-${day.index}">${renderQuizQuestion(day.index,0)}</div>`;}
function renderQuizQuestion(dayIndex,qIndex){const day=STATE.days.find(d=>d.index===dayIndex);const item=day.quiz[qIndex];if(!item)return `<div class="muted">Klart!</div>`;return `<div class="card" id="q-${dayIndex}-${qIndex}"><div style="margin-bottom:8px"><b>FrÃ¥ga ${qIndex+1}/${day.quiz.length}:</b> ${item.prompt}</div>${item.options.map((opt,i)=>`<button class="btn secondary" style="display:block;width:100%;margin:6px 0;text-align:left" onclick="answerQuiz(${dayIndex},${qIndex},${i})">${opt}</button>`).join('')}</div>`;}
function answerQuiz(dayIndex,qIndex,choice){const day=STATE.days.find(d=>d.index===dayIndex);const item=day.quiz[qIndex];const correct=choice===item.answerIndex;const node=document.getElementById(`q-${dayIndex}-${qIndex}`);node.classList.add(correct?'correct':'wrong');setTimeout(()=>{const quiz=document.getElementById(`quiz-${dayIndex}`);if(qIndex+1<day.quiz.length){quiz.innerHTML=renderQuizQuestion(dayIndex,qIndex+1);}else{quiz.innerHTML='<div class="card">Klart! Bra jobbat ðŸ’ª</div>'; }},500);}
function goHome(){localStorage.setItem('seenCover','1');render();}
async function bootstrap(){const res=await fetch('./data/days.json');STATE.days=await res.json();render();}
function render(){const seen=localStorage.getItem('seenCover');app.innerHTML=seen?homeScreen():coverScreen();}
bootstrap();